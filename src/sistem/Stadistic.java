/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistem;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Capital
 */
public class Stadistic extends javax.swing.JFrame {
    public String susuario;

    /**
     * Creates new form Stadistic
     */
    public Stadistic() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }
    
    public void setCurrentUser(String name){
        this.susuario = name;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        cal_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ff_chooser = new com.toedter.calendar.JDateChooser();
        fi_chooser = new com.toedter.calendar.JDateChooser();
        clave_field = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        desc_area = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        c_brix = new javax.swing.JCheckBox();
        c_ph = new javax.swing.JCheckBox();
        c_cons = new javax.swing.JCheckBox();
        c_visc = new javax.swing.JCheckBox();
        c_acid = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("KPI´s");

        cal_button.setText("CALCULAR");
        cal_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cal_buttonActionPerformed(evt);
            }
        });

        jLabel1.setText("Fecha inicio");

        jLabel2.setText("Fecha final");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sistem/logo.png"))); // NOI18N

        jLabel4.setText("Clave");

        ff_chooser.setDateFormatString("yyyy-MM-dd");

        fi_chooser.setDateFormatString("yyyy-MM-dd");

        clave_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clave_fieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Descripción");

        desc_area.setColumns(20);
        desc_area.setRows(5);
        jScrollPane1.setViewportView(desc_area);

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(table2);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        c_brix.setBackground(new java.awt.Color(51, 51, 51));
        c_brix.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        c_brix.setForeground(new java.awt.Color(255, 255, 255));
        c_brix.setSelected(true);
        c_brix.setText("Brix");

        c_ph.setBackground(new java.awt.Color(51, 51, 51));
        c_ph.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        c_ph.setForeground(new java.awt.Color(255, 255, 255));
        c_ph.setSelected(true);
        c_ph.setText("Ph");

        c_cons.setBackground(new java.awt.Color(51, 51, 51));
        c_cons.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        c_cons.setForeground(new java.awt.Color(255, 255, 255));
        c_cons.setSelected(true);
        c_cons.setText("Consistencia");

        c_visc.setBackground(new java.awt.Color(51, 51, 51));
        c_visc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        c_visc.setForeground(new java.awt.Color(255, 255, 255));
        c_visc.setSelected(true);
        c_visc.setText("Viscocidad");

        c_acid.setBackground(new java.awt.Color(51, 51, 51));
        c_acid.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        c_acid.setForeground(new java.awt.Color(255, 255, 255));
        c_acid.setSelected(true);
        c_acid.setText("Acidez");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c_brix)
                    .addComponent(c_ph)
                    .addComponent(c_acid)
                    .addComponent(c_visc)
                    .addComponent(c_cons))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(c_brix)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(c_ph)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(c_cons)
                .addGap(3, 3, 3)
                .addComponent(c_visc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, Short.MAX_VALUE)
                .addComponent(c_acid))
        );

        jLabel6.setText("Graficas:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1272, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ff_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(175, 175, 175))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(clave_field, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5))
                                    .addComponent(fi_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(cal_button, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cal_button, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(clave_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fi_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(ff_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1)))
                    .addComponent(jLabel3))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cal_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cal_buttonActionPerformed

        String fi = ((JTextField)fi_chooser.getDateEditor().getUiComponent()).getText();
        String ff = ((JTextField)ff_chooser.getDateEditor().getUiComponent()).getText();
        String clv = clave_field.getText();
        String dscrip = desc_area.getText();
        Date ahora = new Date();
        SimpleDateFormat formateador = new SimpleDateFormat("yyyy-MM-dd");
        String hoy = formateador.format(ahora);
        System.out.println(hoy);
        
        if(!(clv.isEmpty()||fi.isEmpty()||ff.isEmpty())){
            float [] brix = new float[5];
            float [] ph = new float[5];
            float [] consist = new float[5];
            float [] visco = new float[5];
            float [] acid = new float[5];
            
            float [] prom = null;
            float [] ds = null;
            int id = 0;
            String [] last_kpi = new String[16];
            float[][] sample = null;


            LogConexion reg_kpi = new LogConexion();
            reg_kpi.open();
            sample = reg_kpi.getSample(fi, ff, clv);
            prom = reg_kpi.getProm(fi, ff, clv);
            ds = reg_kpi.getDS(fi, ff, clv);
            reg_kpi.sDSV(ds[0],ds[1],ds[2],ds[3],ds[4]);
            reg_kpi.sPRM(prom[0],prom[1],prom[2],prom[3],prom[4]);
            reg_kpi.close();
            
            for(int i=0; i<sample.length; i++){
                    brix[i]=sample[i][0];
                    ph[i]=sample[i][1];
                    consist[i]=sample[i][2];
                    visco[i]=sample[i][3];
                    acid[i]=sample[i][4];
            }  

            String gb = "";
            String gp = "";
            String gc = "";
            String gv = "";
            String ga = "";
            
            if(c_brix.isSelected()){
                Chart grafica1;
                try {
                    grafica1 = new Chart(this, "BRIX from "+fi+" to "+ff, brix, prom[0], ds[0], last_kpi[0]+"_BRIX");
                    grafica1.setVisible(true);
                    gb = "Graphics/ID_"+last_kpi[0]+"_BRIX.png";
                } catch (IOException ex) {
                    Logger.getLogger(Stadistic.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            
            if(c_ph.isSelected()){
                Chart grafica2;
                try {
                    grafica2 = new Chart(this, "PH from "+fi+" to "+ff, ph, prom[1], ds[1], last_kpi[0]+"_PH");
                    grafica2.setVisible(true);
                    gp = "Graphics/ID_"+last_kpi[0]+"_PH.png";
                } catch (IOException ex) {
                    Logger.getLogger(Stadistic.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            
            if(c_cons.isSelected()){
                Chart grafica3;
                try {
                    grafica3 = new Chart(this, "CONSISTENCY from "+fi+" to "+ff, consist, prom[2], ds[2], last_kpi[0]+"_CONS");
                    grafica3.setVisible(true);
                    gc = "Graphics/ID_"+last_kpi[0]+"_CONS.png";
                } catch (IOException ex) {
                    Logger.getLogger(Stadistic.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            
            if(c_visc.isSelected()){
                Chart grafica4;
                try {
                    grafica4 = new Chart(this, "VISCOSITY from "+fi+" to "+ff, visco, prom[3], ds[3], last_kpi[0]+"_VISC");
                    grafica4.setVisible(true);
                    gv = "Graphics/ID_"+last_kpi[0]+"_VISC.png";
                } catch (IOException ex) {
                    Logger.getLogger(Stadistic.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            if(c_acid.isSelected()){
                Chart grafica5;
                try {
                    grafica5 = new Chart(this, "ACIDITY from "+fi+" to "+ff, acid, prom[4], ds[4], last_kpi[0]+"_ACID");
                    grafica5.setVisible(true);
                    ga = "Graphics/ID_"+last_kpi[0]+"_ACID.png";
                } catch (IOException ex) {
                    Logger.getLogger(Stadistic.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            LogConexion graphics = new LogConexion();
            graphics.open();
            try {
                graphics.sGR(gb, gp, gc, gv, ga);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Stadistic.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            id = graphics.getUId(susuario);
            int a = graphics.getPId();
            int b = graphics.getDId();
            int c = graphics.getGId();        
            graphics.sKPI(hoy, clv, dscrip, fi, ff, id, a, b, c);
            last_kpi = graphics.gKPI();
            graphics.close();
            
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID");
            model.addColumn("Fecha");
            model.addColumn("Clave");
            model.addColumn("Descripción");
            model.addColumn("Fi");
            model.addColumn("Ff");
            model.addColumn("Prom brix");
            model.addColumn("Prom ph");
            model.addColumn("Prom consistencia");
            model.addColumn("Prom viscocidad");
            model.addColumn("Prom acidez");
            model.addColumn("DS brix");
            model.addColumn("DS ph");
            model.addColumn("DS consistencia");
            model.addColumn("DS viscocidad");
            model.addColumn("DS acidez");
            table2.setModel(model);
            table2.setEnabled(false);
            model.addRow(last_kpi);
            
            }else{
            JOptionPane.showMessageDialog(this,"FAVOR DE LLENAR LOS CAMPOS",
                         "System",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_cal_buttonActionPerformed

    private void clave_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clave_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clave_fieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stadistic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stadistic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stadistic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stadistic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stadistic().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JCheckBox c_acid;
    private javax.swing.JCheckBox c_brix;
    private javax.swing.JCheckBox c_cons;
    private javax.swing.JCheckBox c_ph;
    private javax.swing.JCheckBox c_visc;
    private javax.swing.JButton cal_button;
    private javax.swing.JTextField clave_field;
    private javax.swing.JTextArea desc_area;
    private com.toedter.calendar.JDateChooser ff_chooser;
    private com.toedter.calendar.JDateChooser fi_chooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table2;
    // End of variables declaration//GEN-END:variables
}
